name: UI Automation Web

on:
  push:
    branches: [ test-workflows ]
#  pull_request:
#    branches: [ master ]

permissions:
  contents: read

env:
  PROPS_FILE: 'src/test/resources/application.properties'

jobs:
#  build-job:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v3
#        with:
#          java-version: '8'
#          distribution: 'adopt'
#      - name: Grant Permissions to gradlew
#        run: chmod +x gradlew
#      - name: Build with Gradle
#        run: ./gradlew clean
#
#  code-static-analyzer:
#    needs: build-job
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v3
#        with:
#          java-version: '8'
#          distribution: 'adopt'
#      - name: Grant Permissions to gradlew
#        run: chmod +x gradlew
#      - name: Code static analyzer
#        if: success()
#        run: ./gradlew clean check -x test

  cucumber-dry-run:
#    needs: code-static-analyzer
    runs-on: ubuntu-latest
    steps:
      # install chrome & chromedriver
      - uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: 120

      - uses: actions/checkout@v2
      - uses: nanasess/setup-chromedriver@v2
      - run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub
      # checkout & run dry run
      - uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Grant Permissions to gradlew
        run: chmod +x gradlew
      # install openvpn
      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved

      # execute connect openvpn
      - name: Set file permissions
        run: chmod 600 .github/workflows/client.ovpn
      - name: Connect to VPN
        uses: "kota65535/github-openvpn-connect-action@v2"
        with:
          config_file: .github/workflows/client.ovpn
          username: ${{ secrets.OVPN_USERNAME }}
          password: ${{ secrets.OVPN_PASSWORD }}
      - name: Cucumber -dry-run
        if: success()
        run: ./gradlew clean cucumber --cucumber-dry-run true

#  test-execution-and-generate-report:
#    needs: [ code-static-analyzer, cucumber-dry-run ]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: 'BrowserStack Env Setup'
#        uses: 'browserstack/github-actions/setup-env@master'
#        with:
#          username: ${{ secrets.BROWSERSTACK_USERNAME }}
#          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v3
#        with:
#          java-version: '8'
#          distribution: 'adopt'
#      - name: Grant Permissions to gradlew
#        run: chmod +x gradlew
#      - name: Config properties file
#        run: |
#          sed -ie "
#            s|driver.web.use-remote=.*|driver.web.use-remote=true|g
#            s/runId/$GITHUB_RUN_ID/g
#            s/runnerName/$RUNNER_NAME/g
#            s/repos/$BROWSERSTACK_PROJECT_NAME/g
#            s/username/$BROWSERSTACK_USERNAME/g
#            s/accesskey/$BROWSERSTACK_ACCESS_KEY/g" src/test/resources/application.properties
#          cat ${{ env.PROPS_FILE }}
#      - name: Gradle run cucumber
#        if: always()
#        run: |
#          echo ./gradlew clean cucumber -Penv=staging -Pprops=application --tags @sample.feature--threads 1
#          ./gradlew clean cucumber -Penv=staging -Pprops=application --tags @sample.feature --threads 1
#      - name: Upload report artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: Cucumber Report
#          path: output/
#      - uses: actions/checkout@v2
#      - name: Slack Notification
#        uses: rtCamp/action-slack-notify@v2
#        env:
#          SLACK_CHANNEL: sdet-ui-automation-web-report
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#          SLACK_ICON: ${{ secrets.SLACK_ICON }}
#          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
#          SLACK_TITLE: Message
#          SLACK_MESSAGE: 'UI Automation Result :rocket:'
#          SLACK_USERNAME: ReportingBot