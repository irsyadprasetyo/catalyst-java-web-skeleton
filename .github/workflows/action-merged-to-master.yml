name: Merge Master Test

on:
  push:
    branches: [ master ]

permissions:
  contents: read

env:
  PROPS_FILE: 'src/test/resources/application.properties'

jobs:
  test-execution-and-generate-report:
    runs-on: macos-latest
    steps:
      # set timezone
      - name: Set Timezone Asia Jakarta
        run: systemsetup -settimezone Asia/Jakarta
      # install chrome & chromedriver
      - uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: 120
      - uses: actions/checkout@v2
      - uses: nanasess/setup-chromedriver@v2
      - run: |
          export DISPLAY=:99
      # install openvpn
      - name: Install OpenVPN
        run: |
          brew update
          brew install openvpn
      # execute connect openvpn
      - name: Connect to VPN
        uses: kota65535/github-openvpn-connect-action@v2
        with:
          config_file: .github/workflows/client.ovpn
          username: ${{ secrets.OVPN_USERNAME }}
          password: ${{ secrets.OVPN_PASSWORD }}
          background: true

      - name: Wait for VPN connection
        id: wait_for_vpn
        run: |
          timeout=120  # Set the timeout (value in seconds)
          elapsed=0
          while true; do
            if grep -q "Peer Connection Initiated" openvpn.log; then
              echo "VPN connected successfully."
              break
            fi

            sleep 10  # Adjust the sleep time based on your VPN connection time
            elapsed=$((elapsed + 10))

            if [ "$elapsed" -ge "$timeout" ]; then
              echo "Timeout reached. VPN connection not established."
              exit 1
            fi
          done
      - name: Set up JDK 11
        if: success()
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'corretto'
      - name: Grant Permissions to gradlew
        run: chmod +x gradlew
      #  - uses: actions/checkout@v3
      #  - name: 'BrowserStack Env Setup'
      #    uses: 'browserstack/github-actions/setup-env@master'
      #    with:
      #      username: ${{ secrets.BROWSERSTACK_USERNAME }}
      #      access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
      #  - name: Config properties file
      #    run: |
      #      sed -ie "
      #        s|driver.web.use-remote=.*|driver.web.use-remote=true|g
      #        s/runId/$GITHUB_RUN_ID/g
      #        s/runnerName/$RUNNER_NAME/g
      #        s/repos/$BROWSERSTACK_PROJECT_NAME/g
      #        s/username/$BROWSERSTACK_USERNAME/g
      #        s/accesskey/$BROWSERSTACK_ACCESS_KEY/g" src/test/resources/application.properties
      - name: Gradle run cucumber
        if: success()
        run: |
          cat ${{ env.PROPS_FILE }}
          echo ./gradlew clean cucumber -Penv=dev -Pprops=application --tags @login.feature --threads 2
          ./gradlew clean cucumber -Penv=dev -Pprops=application --tags @login.feature --threads 2
      - name: Upload report artifact
        uses: actions/upload-artifact@v2
        with:
          name: Cucumber Report
          path: output/
    #  - uses: actions/checkout@v2
    #  - name: Slack Notification
    #    uses: rtCamp/action-slack-notify@v2
    #    {env:}
    #      SLACK_CHANNEL: ${{slack_channel}}
    #      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    #      SLACK_ICON: ${{ secrets.SLACK_ICON }}
    #      SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
    #      SLACK_TITLE: Message
    #      SLACK_MESSAGE: 'UI Automation Result :rocket:'
    #      SLACK_USERNAME: ReportingBot
